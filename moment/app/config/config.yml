imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@HomeBundle/Resources/config/services.yml" }
    - { resource: "@LoginUserBundle/Resources/config/services.yml" }
    - { resource: "@OauthServerBundle/Resources/config/services.yml" }
    - { resource: "@APIAppBundle/Resources/config/services.yml" }
    - { resource: "@InventoryBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: id

framework:
    #esi:             ~
    translator: { fallbacks: [en] }
      #paths:
            #- '%kernel.root_dir%/../translations'
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr

# app/config/config.yml
nelmio_api_doc: ~

fos_rest:
    routing_loader:
        default_format: json                            # All responses should be JSON formated
        include_format: false                           # We do not include format in request, so that all responses
                                                        # will eventually be JSON formated
fos_user:
    db_driver: orm
    firewall_name: fos_log                                  # Seems to be used when registering user/reseting password,
                                                        # but since there is no "login", as so it seems to be useless in
                                                        # our particular context, but still required by "FOSUserBundle"
    user_class: LoginUserBundle\Entity\User
    group:
        group_class: LoginUserBundle\Entity\Group
    from_email:
        address: "gd3.adi@app.com"
        sender_name: "I Gede Adi Saputra Yasa"

fos_oauth_server:
    db_driver:           orm
    client_class:        OauthServerBundle\Entity\Client
    access_token_class:  OauthServerBundle\Entity\AccessToken
    refresh_token_class: OauthServerBundle\Entity\RefreshToken
    auth_code_class:     OauthServerBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider             # This property will be used when valid credentials are given to load the user upon access token creation
